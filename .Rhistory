pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.01, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
}
Param.Est.Samples.Size[[j]] <- param.est.pp
print(paste("Finished with model", mods.w.tau[j]))
}
Param.Est.Samples.Size
param.est.pp
j
Param.Est.Samples.Size[[j]]
Param.Est.Samples.Size[[1]]
Param.Est.Samples.Size
Param.Est.Samples.Size <- list()
Param.Est.Samples.Size <- list()
for (j in 1:length(mods.w.tau)) {
reps <- 10
param.est.pp <- matrix(NA, reps, 5)
colnames(param.est.pp) <- c("tru.tau", "tru.mod.pp", "med.tau", "sd.tau", "pp.size")
psuedo.sample.index <- sample(x = seq(mod.samp[[j]][1], mod.samp[[j]][2]), size = reps, replace = FALSE)
for (p in 1:reps) {
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.01, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
}
Param.Est.Samples.Size[[1]] <- param.est.pp
print(paste("Finished with model", mods.w.tau[j]))
}
Param.Est.Samples.Size
Param.Est.Samples.Size <- list()
for (j in 1:length(mods.w.tau)) {
reps <- 10
param.est.pp <- matrix(NA, reps, 5)
colnames(param.est.pp) <- c("tru.tau", "tru.mod.pp", "med.tau", "sd.tau", "pp.size")
psuedo.sample.index <- sample(x = seq(mod.samp[[j]][1], mod.samp[[j]][2]), size = reps, replace = FALSE)
for (p in 1:reps) {
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.01, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
}
Param.Est.Samples.Size[[j]] <- param.est.pp
print(paste("Finished with model", mods.w.tau[j]))
}
Param.Est.Samples.Size
for (i in 1:length(sample.sizes)){
#Extract all parameters and summary stats from the simulations for these sample size
all.params <- c()
all.sum.stats <- c()
for (k in 1:length(SimOutput[[1]])){
all.params <- rbind(all.params, SimOutput[[i]][[k]]$params)
all.sum.stats <- rbind(all.sum.stats, SimOutput[[i]][[k]]$summary.stats)
}
#list model index, so we known truth easily
mods.w.tau <- c("BM.filt", "BM.comp", "OU.filt", "OU.comp")
#list so we know which indeces to sample from for each of the above models
spm <- nrow(all.params)/6
mod.samp <- list(c(spm+1, spm*2), c(spm*2+1, spm*3), c(spm*4+1, spm*5), c(spm*5+1, spm*6))
#for each model, sample a number of datasets and perform ABC.
Param.Est.Samples.Size <- list()
for (j in 1:length(mods.w.tau)) {
reps <- 10
param.est.pp <- matrix(NA, reps, 5)
colnames(param.est.pp) <- c("tru.tau", "tru.mod.pp", "med.tau", "sd.tau", "pp.size")
psuedo.sample.index <- sample(x = seq(mod.samp[[j]][1], mod.samp[[j]][2]), size = reps, replace = FALSE)
for (p in 1:reps) {
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.01, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
}
Param.Est.Samples.Size[[j]] <- param.est.pp
print(paste("Finished with model", mods.w.tau[j]))
}
Param.Estimates[[i]] <- Param.Est.Samples.Size
print(paste("Finished with sample size", sample.sizes[i]))
}
Param.Estimates
sample.sizes
sample.sizes <- c(100,150,200,250,300,350,400,450,500,550,600,650,700,750,800,850,900,950)
```{r}
Param.Estimates <- list()
colnames(Param.Power) <- c("mean.diff", "sd.of.mean.diffs")
#Do this for each dataset
for (i in 1:length(sample.sizes)){
#Extract all parameters and summary stats from the simulations for these sample size
all.params <- c()
all.sum.stats <- c()
for (k in 1:length(SimOutput[[1]])){
all.params <- rbind(all.params, SimOutput[[i]][[k]]$params)
all.sum.stats <- rbind(all.sum.stats, SimOutput[[i]][[k]]$summary.stats)
}
#list model index, so we known truth easily
mods.w.tau <- c("BM.filt", "BM.comp", "OU.filt", "OU.comp")
#list so we know which indeces to sample from for each of the above models
spm <- nrow(all.params)/6
mod.samp <- list(c(spm+1, spm*2), c(spm*2+1, spm*3), c(spm*4+1, spm*5), c(spm*5+1, spm*6))
#for each model, sample a number of datasets and perform ABC.
Param.Est.Samples.Size <- list()
for (j in 1:length(mods.w.tau)) {
reps <- 10
param.est.pp <- matrix(NA, reps, 5)
colnames(param.est.pp) <- c("tru.tau", "tru.mod.pp", "med.tau", "sd.tau", "pp.size")
psuedo.sample.index <- sample(x = seq(mod.samp[[j]][1], mod.samp[[j]][2]), size = reps, replace = FALSE)
for (p in 1:reps) {
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.01, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
}
Param.Est.Samples.Size[[j]] <- param.est.pp
print(paste("Finished with model", mods.w.tau[j]))
}
Param.Estimates[[i]] <- Param.Est.Samples.Size
print(paste("Finished with sample size", sample.sizes[i]))
}
psuedo.abc
length(tau.pp)
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
length(tau.pp)
true.model.pp
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.01, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
true.model.pp
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
param.est.pp
Param.Estimates <- list()
colnames(Param.Power) <- c("mean.diff", "sd.of.mean.diffs")
Param.Estimates <- list()
colnames(Param.Power) <- c("mean.diff", "sd.of.mean.diffs")
Model.Index <- rep(rep(c("BM.neut", "BM.filt", "BM.comp", "OU.neut", "OU.filt", "OU.comp"), each=nrow(all.sum.stats)/length(SimOutput[[1]])))
#Do this for each dataset
for (i in 1:length(sample.sizes)){
#Extract all parameters and summary stats from the simulations for these sample size
all.params <- c()
all.sum.stats <- c()
for (k in 1:length(SimOutput[[1]])){
all.params <- rbind(all.params, SimOutput[[i]][[k]]$params)
all.sum.stats <- rbind(all.sum.stats, SimOutput[[i]][[k]]$summary.stats)
}
#list model index, so we known truth easily
mods.w.tau <- c("BM.filt", "BM.comp", "OU.filt", "OU.comp")
#list so we know which indeces to sample from for each of the above models
spm <- nrow(all.params)/6
mod.samp <- list(c(spm+1, spm*2), c(spm*2+1, spm*3), c(spm*4+1, spm*5), c(spm*5+1, spm*6))
#for each model, sample a number of datasets and perform ABC.
Param.Est.Samples.Size <- list()
for (j in 1:length(mods.w.tau)) {
reps <- 100
param.est.pp <- matrix(NA, reps, 5)
colnames(param.est.pp) <- c("tru.tau", "tru.mod.pp", "med.tau", "sd.tau", "pp.size")
psuedo.sample.index <- sample(x = seq(mod.samp[[j]][1], mod.samp[[j]][2]), size = reps, replace = FALSE)
for (p in 1:reps) {
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.01, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
}
Param.Est.Samples.Size[[j]] <- param.est.pp
print(paste("Finished with model", mods.w.tau[j]))
}
Param.Estimates[[i]] <- Param.Est.Samples.Size
print(paste("Finished with sample size", sample.sizes[i]))
for (i in 1:length(sample.sizes)){
#Extract all parameters and summary stats from the simulations for these sample size
all.params <- c()
all.sum.stats <- c()
for (k in 1:length(SimOutput[[1]])){
all.params <- rbind(all.params, SimOutput[[i]][[k]]$params)
all.sum.stats <- rbind(all.sum.stats, SimOutput[[i]][[k]]$summary.stats)
}
#list model index, so we known truth easily
mods.w.tau <- c("BM.filt", "BM.comp", "OU.filt", "OU.comp")
#list so we know which indeces to sample from for each of the above models
spm <- nrow(all.params)/6
mod.samp <- list(c(spm+1, spm*2), c(spm*2+1, spm*3), c(spm*4+1, spm*5), c(spm*5+1, spm*6))
#for each model, sample a number of datasets and perform ABC.
Param.Est.Samples.Size <- list()
for (j in 1:length(mods.w.tau)) {
reps <- 100
param.est.pp <- matrix(NA, reps, 5)
colnames(param.est.pp) <- c("tru.tau", "tru.mod.pp", "med.tau", "sd.tau", "pp.size")
psuedo.sample.index <- sample(x = seq(mod.samp[[j]][1], mod.samp[[j]][2]), size = reps, replace = FALSE)
for (p in 1:reps) {
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.01, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
}
Param.Est.Samples.Size[[j]] <- param.est.pp
print(paste("Finished with model", mods.w.tau[j]))
}
Param.Estimates[[i]] <- Param.Est.Samples.Size
print(paste("Finished with sample size", sample.sizes[i]))
}
}}
for (i in 1:length(sample.sizes)){
#Extract all parameters and summary stats from the simulations for these sample size
all.params <- c()
all.sum.stats <- c()
for (k in 1:length(SimOutput[[1]])){
all.params <- rbind(all.params, SimOutput[[i]][[k]]$params)
all.sum.stats <- rbind(all.sum.stats, SimOutput[[i]][[k]]$summary.stats)
}
#list model index, so we known truth easily
mods.w.tau <- c("BM.filt", "BM.comp", "OU.filt", "OU.comp")
#list so we know which indeces to sample from for each of the above models
spm <- nrow(all.params)/6
mod.samp <- list(c(spm+1, spm*2), c(spm*2+1, spm*3), c(spm*4+1, spm*5), c(spm*5+1, spm*6))
#for each model, sample a number of datasets and perform ABC.
Param.Est.Samples.Size <- list()
for (j in 1:length(mods.w.tau)) {
reps <- 100
param.est.pp <- matrix(NA, reps, 5)
colnames(param.est.pp) <- c("tru.tau", "tru.mod.pp", "med.tau", "sd.tau", "pp.size")
psuedo.sample.index <- sample(x = seq(mod.samp[[j]][1], mod.samp[[j]][2]), size = reps, replace = FALSE)
for (p in 1:reps) {
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.01, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
}
Param.Est.Samples.Size[[j]] <- param.est.pp
print(paste("Finished with model", mods.w.tau[j]))
}
Param.Estimates[[i]] <- Param.Est.Samples.Size
print(paste("Finished with sample size", sample.sizes[i]))
}
0.01*3000
0.05*3000
0.03*3000
0.035*3000
0.033*3000
0.025*3000
Param.Estimates <- list()
colnames(Param.Power) <- c("mean.diff", "sd.of.mean.diffs")
Param.Estimates <- list()
colnames(Param.Power) <- c("mean.diff", "sd.of.mean.diffs")
Param.Estimates <- list()
Model.Index <- rep(rep(c("BM.neut", "BM.filt", "BM.comp", "OU.neut", "OU.filt", "OU.comp"), each=nrow(all.sum.stats)/length(SimOutput[[1]])))
#Do this for each dataset
for (i in 1:length(sample.sizes)){
#Extract all parameters and summary stats from the simulations for these sample size
all.params <- c()
all.sum.stats <- c()
for (k in 1:length(SimOutput[[1]])){
all.params <- rbind(all.params, SimOutput[[i]][[k]]$params)
all.sum.stats <- rbind(all.sum.stats, SimOutput[[i]][[k]]$summary.stats)
}
#list model index, so we known truth easily
mods.w.tau <- c("BM.filt", "BM.comp", "OU.filt", "OU.comp")
#list so we know which indeces to sample from for each of the above models
spm <- nrow(all.params)/6
mod.samp <- list(c(spm+1, spm*2), c(spm*2+1, spm*3), c(spm*4+1, spm*5), c(spm*5+1, spm*6))
#for each model, sample a number of datasets and perform ABC.
Param.Est.Samples.Size <- list()
for (j in 1:length(mods.w.tau)) {
reps <- 100
param.est.pp <- matrix(NA, reps, 5)
colnames(param.est.pp) <- c("tru.tau", "tru.mod.pp", "med.tau", "sd.tau", "pp.size")
psuedo.sample.index <- sample(x = seq(mod.samp[[j]][1], mod.samp[[j]][2]), size = reps, replace = FALSE)
for (p in 1:reps) {
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.05, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
}
Param.Est.Samples.Size[[j]] <- param.est.pp
print(paste("Finished with model", mods.w.tau[j]))
}
Param.Estimates[[i]] <- Param.Est.Samples.Size
print(paste("Finished with sample size", sample.sizes[i]))
}
Param.Estimates[[i]]
hist(Param.Estimates[[18]][,3])
Param.Estimates[[18]]
Param.Estimates[[18]][[4]]
Param.Estimates[[18]][[4]][,3]
hist(Param.Estimates[[18]][[4]][,3])
hist(Param.Estimates[[18]][[4]][,3])
hist(Param.Estimates[[18]][[4]][,3])
abline(v=median(Param.Estimates[[18]][[4]][,3]))
hist(Param.Estimates[[18]][[4]][,3])
abline(v=median(Param.Estimates[[18]][[4]][,3]))
hist(Param.Estimates[[18]][[4]][,3], breaks=10)
abline(v=median(Param.Estimates[[18]][[4]][,3]))
abline(v=median(Param.Estimates[[18]][[4]][,1]), col="red", lwd=3)
hist(Param.Estimates[[18]][[4]][,3], breaks=10)
abline(v=median(Param.Estimates[[18]][[4]][,3]))
abline(v=median(Param.Estimates[[18]][[4]][,1]), col="red", lwd=3)
Param.Estimates[[18]][[4]][,3]
Param.Estimates[[18]][[4]]
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
tau.pp
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
true.model.pp
tau.pp
length(tau.pp)
99/150
true.model.pp
hist(tau.pp)
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.01, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
hist(tau.pp)
hist(tau.pp, breaks=10)
hist(tau.pp, breaks=10)
hist(tau.pp, breaks=30)
hist(tau.pp, breaks=10)
hist(tau.pp, breaks=30)
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.02, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
hist(tau.pp, breaks=30)
Param.Estimates[[18]][[1]]
Param.Estimates <- list()
Model.Index <- rep(rep(c("BM.neut", "BM.filt", "BM.comp", "OU.neut", "OU.filt", "OU.comp"), each=nrow(all.sum.stats)/length(SimOutput[[1]])))
#Do this for each dataset
for (i in 1:length(sample.sizes)){
#Extract all parameters and summary stats from the simulations for these sample size
all.params <- c()
all.sum.stats <- c()
for (k in 1:length(SimOutput[[1]])){
all.params <- rbind(all.params, SimOutput[[i]][[k]]$params)
all.sum.stats <- rbind(all.sum.stats, SimOutput[[i]][[k]]$summary.stats)
}
all.sum.stats <- all.sum.stats[,c(4, 9, 10, 12, 13, 16, 18, 19, 20, 27)]
#list model index, so we known truth easily
mods.w.tau <- c("BM.filt", "BM.comp", "OU.filt", "OU.comp")
#list so we know which indeces to sample from for each of the above models
spm <- nrow(all.params)/6
mod.samp <- list(c(spm+1, spm*2), c(spm*2+1, spm*3), c(spm*4+1, spm*5), c(spm*5+1, spm*6))
#for each model, sample a number of datasets and perform ABC.
Param.Est.Samples.Size <- list()
for (j in 1:length(mods.w.tau)) {
reps <- 100
param.est.pp <- matrix(NA, reps, 5)
colnames(param.est.pp) <- c("tru.tau", "tru.mod.pp", "med.tau", "sd.tau", "pp.size")
psuedo.sample.index <- sample(x = seq(mod.samp[[j]][1], mod.samp[[j]][2]), size = reps, replace = FALSE)
for (p in 1:reps) {
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.02, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
}
Param.Est.Samples.Size[[j]] <- param.est.pp
print(paste("Finished with model", mods.w.tau[j]))
}
Param.Estimates[[i]] <- Param.Est.Samples.Size
print(paste("Finished with sample size", sample.sizes[i]))
}
Param.Estimates <- list()
Model.Index <- rep(rep(c("BM.neut", "BM.filt", "BM.comp", "OU.neut", "OU.filt", "OU.comp"), each=nrow(all.sum.stats)/length(SimOutput[[1]])))
#Do this for each dataset
for (i in 1:length(sample.sizes)){
#Extract all parameters and summary stats from the simulations for these sample size
all.params <- c()
all.sum.stats <- c()
for (k in 1:length(SimOutput[[1]])){
all.params <- rbind(all.params, SimOutput[[i]][[k]]$params)
all.sum.stats <- rbind(all.sum.stats, SimOutput[[i]][[k]]$summary.stats)
}
all.sum.stats <- all.sum.stats[,c(4, 9, 10, 12, 13, 16, 18, 19, 20, 27)]
#list model index, so we known truth easily
mods.w.tau <- c("BM.filt", "BM.comp", "OU.filt", "OU.comp")
#list so we know which indeces to sample from for each of the above models
spm <- nrow(all.params)/6
mod.samp <- list(c(spm+1, spm*2), c(spm*2+1, spm*3), c(spm*4+1, spm*5), c(spm*5+1, spm*6))
#for each model, sample a number of datasets and perform ABC.
Param.Est.Samples.Size <- list()
for (j in 1:length(mods.w.tau)) {
reps <- 100
param.est.pp <- matrix(NA, reps, 5)
colnames(param.est.pp) <- c("tru.tau", "tru.mod.pp", "med.tau", "sd.tau", "pp.size")
psuedo.sample.index <- sample(x = seq(mod.samp[[j]][1], mod.samp[[j]][2]), size = reps, replace = FALSE)
for (p in 1:reps) {
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.02, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
}
Param.Est.Samples.Size[[j]] <- param.est.pp
print(paste("Finished with model", mods.w.tau[j]))
}
Param.Estimates[[i]] <- Param.Est.Samples.Size
print(paste("Finished with sample size", sample.sizes[i]))
}
Param.Estimates[[i]]
Param.Estimates <- list()
Model.Index <- rep(rep(c("BM.neut", "BM.filt", "BM.comp", "OU.neut", "OU.filt", "OU.comp"), each=nrow(all.sum.stats)/length(SimOutput[[1]])))
#Do this for each dataset
for (i in 1:length(sample.sizes)){
#Extract all parameters and summary stats from the simulations for these sample size
all.params <- c()
all.sum.stats <- c()
for (k in 1:length(SimOutput[[1]])){
all.params <- rbind(all.params, SimOutput[[i]][[k]]$params)
all.sum.stats <- rbind(all.sum.stats, SimOutput[[i]][[k]]$summary.stats)
}
all.sum.stats <- all.sum.stats[,c(4, 16, 18, 19, 20,)]
#list model index, so we known truth easily
mods.w.tau <- c("BM.filt", "BM.comp", "OU.filt", "OU.comp")
#list so we know which indeces to sample from for each of the above models
spm <- nrow(all.params)/6
mod.samp <- list(c(spm+1, spm*2), c(spm*2+1, spm*3), c(spm*4+1, spm*5), c(spm*5+1, spm*6))
#for each model, sample a number of datasets and perform ABC.
Param.Est.Samples.Size <- list()
for (j in 1:length(mods.w.tau)) {
reps <- 100
param.est.pp <- matrix(NA, reps, 5)
colnames(param.est.pp) <- c("tru.tau", "tru.mod.pp", "med.tau", "sd.tau", "pp.size")
psuedo.sample.index <- sample(x = seq(mod.samp[[j]][1], mod.samp[[j]][2]), size = reps, replace = FALSE)
for (p in 1:reps) {
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.02, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
}
Param.Est.Samples.Size[[j]] <- param.est.pp
print(paste("Finished with model", mods.w.tau[j]))
}
Param.Estimates[[i]] <- Param.Est.Samples.Size
print(paste("Finished with sample size", sample.sizes[i]))
}
Param.Estimates <- list()
Model.Index <- rep(rep(c("BM.neut", "BM.filt", "BM.comp", "OU.neut", "OU.filt", "OU.comp"), each=nrow(all.sum.stats)/length(SimOutput[[1]])))
#Do this for each dataset
for (i in 1:length(sample.sizes)){
#Extract all parameters and summary stats from the simulations for these sample size
all.params <- c()
all.sum.stats <- c()
for (k in 1:length(SimOutput[[1]])){
all.params <- rbind(all.params, SimOutput[[i]][[k]]$params)
all.sum.stats <- rbind(all.sum.stats, SimOutput[[i]][[k]]$summary.stats)
}
all.sum.stats <- all.sum.stats[,c(4, 16, 18, 19, 20)]
#list model index, so we known truth easily
mods.w.tau <- c("BM.filt", "BM.comp", "OU.filt", "OU.comp")
#list so we know which indeces to sample from for each of the above models
spm <- nrow(all.params)/6
mod.samp <- list(c(spm+1, spm*2), c(spm*2+1, spm*3), c(spm*4+1, spm*5), c(spm*5+1, spm*6))
#for each model, sample a number of datasets and perform ABC.
Param.Est.Samples.Size <- list()
for (j in 1:length(mods.w.tau)) {
reps <- 100
param.est.pp <- matrix(NA, reps, 5)
colnames(param.est.pp) <- c("tru.tau", "tru.mod.pp", "med.tau", "sd.tau", "pp.size")
psuedo.sample.index <- sample(x = seq(mod.samp[[j]][1], mod.samp[[j]][2]), size = reps, replace = FALSE)
for (p in 1:reps) {
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.02, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, median(tau.pp), sd(tau.pp), length(tau.pp))
}
Param.Est.Samples.Size[[j]] <- param.est.pp
print(paste("Finished with model", mods.w.tau[j]))
}
Param.Estimates[[i]] <- Param.Est.Samples.Size
print(paste("Finished with sample size", sample.sizes[i]))
}
Param.Estimates[[i]]
mean(tau.pp)
mean(c(5,50))
tru.tau <- as.numeric(paste(all.params[psuedo.sample.index[p],10]))
pseudo.obs.ss <- all.sum.stats[psuedo.sample.index[p],]
psuedo.abc <- postpr(target=pseudo.obs.ss, index = Model.Index[-psuedo.sample.index[p]] , param=all.params[-psuedo.sample.index[p],], sumstat=all.sum.stats[-psuedo.sample.index[p],], tol=0.02, method="rejection" )
true.model.pp <- sum(psuedo.abc$values == mods.w.tau[j])/length(psuedo.abc$values)
tau.pp <- as.numeric(paste(all.params[as.numeric(rownames(psuedo.abc$ss[psuedo.abc$values == mods.w.tau[j],])),10]))
param.est.pp[p,] <- c(tru.tau, true.model.pp, mean(tau.pp), sd(tau.pp), length(tau.pp))
tau.pp
hist(tau.pp)
tru.tau
