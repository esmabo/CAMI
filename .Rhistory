abline(predicted)
lines(t1, predicted)
plot(t2 ~ t1)
lines(t1, predicted)
predicted
lines(t1, predicted)
plot(t2 ~ t1)
lines(t1, predicted)
logLik(nonPhyloModel)
logLik(quadModel)
summary(nonPhyloModel)
logLik(quadModel)
logLik(nonPhyloModel)
AIC(nonPhyloModel)
AIC(nonPhyloModel)
AIC(quadModel)
require(phytools)
require(phytools)
phylomorphospace(prunedTree, mammalData[, c("trait1", "trait2")], label="off", node.size=c(0.5, 0.7))
abline(nonPhyloModel, col="red")
phylomorphospace(prunedTree, mammalData[, c("trait1", "trait2")], label="off", node.size=c(0.5, 0.7))
abline(nonPhyloModel, col="red")
t1_pic <- pic(t1, prunedTree)
t1_pic
prunedTree
names(t1) <- rownames(mammalData)
names(t2) <- rownames(mammalData)
t1_pic <- pic(t1, prunedTree)
t2_pic <- pic(t2, prunedTree)
plot(t2_pic ~ t1_pic)
ks.test(t2_pic)
?ks.test
t2_pic
picModel <- lm(t2_pic, t1_pic + 0)
picModel <- lm(t2_pic ~ t1_pic + 0)
summary(picModel)
abline(picModel, col="blue")
plot(t2_pic ~ t1_pic)
abline(picModel, col="blue")
residuals(picModel)
rr <- residuals(picModel)
hist(rr)
plot(picModel)
prunedTree
prunedTree$tip.label
prunedTree
prunedTree$Nnode
attributes(prunedTree)
nodelabels()
plot(prunedTree)
nodelabels()
require(nlme)
correlation=corBrownian(phy=prunedTree, data=mammalData)
pglsModel <- gls(trait2~trait1)
trait2
pglsModel <- gls(trait2~trait1, correlation=corBrownian(phy=prunedTree), data=mammalData)
plot(trait2~trait1, data=mammalData, pch=19 cex=0.5)
plot(trait2~trait1, data=mammalData, pch=19, cex=0.5)
abline(nonPhyloModel, col="red")
abline(pglsModel, col="blue")
coefficients(picModel)
coefficients(pglsModel)
pglsModel_ML <- gls(trait2~trait1, correlation=corBrownian(phy=prunedTree), data=mammalData, method="ML")
summary(pglsModel_ML)
coefficients(pglsModel_ML)
coefficients(picModel)
coefficients(pglsModel_ML)
pglsModel_ML <- gls(trait2~trait1, correlation=corBrownian(phy=prunedTree), data=mammalData, method="ML")
?gls
pglsLambda <- gls(trait2~trait1, correlation=corPagel(0.5, phy=prunedTree, fixed=F), data=mammalData, method="ML")
summary(pglsLambda)
pglsLambda <- gls(trait2~trait1, correlation=corPagel(0.5, phy=prunedTree, fixed=F), data=mammalData, method="ML")
summary(pglsLambda)
pglsLambda <- gls(trait2~trait1, correlation=corPagel(0.5, phy=prunedTree, fixed=F), data=mammalData, method="ML")
summary(pglsLambda)
raw_data<-read.csv("~/Documents/Caudata_PhyloComp_Data.csv")
cd<-raw_data[,-1]
rownames(cd)<-raw_data[,1]
ct<-read.nexus("~/Documents/caud.ultra.nexus")
?read.nexus
require(ape)
ct<-read.nexus("~/Documents/caud.ultra.nexus")
lib
ct<-read.nexus("~/Documents/caud.ultra.nexus")
ct
cd
raw_data<-read.csv("~/Documents/Caudata_PhyloComp_Data.csv")
cd<-raw_data[,-1]
cd
raw_data
cd
attributes(cd)
require(phytools)
ct
name.check(ct, cd)
require(geiger)
name.check(ct, cd)
pct<-pruning$phy
head(cd)
BodySize <- cd$TOTL_mm.totallength.quant
pruning<-treedata(ct, cd)
raw_data<-read.csv("~/Documents/Caudata_PhyloComp_Data.csv")
cd<-raw_data[,-1]
rownames(cd)<-raw_data[,1]
ct<-read.nexus("~/Documents/caud.ultra.nexus")
name.check(ct, cd)
pruning<-treedata(ct, cd)
pct<-pruning$phy
pglsModel_ML <- gls(BodySize~elev, correlation=corBrownian(phy=pct), data=cd, method="ML")
require(ape)
require(phytools)
require(geiger)
require(nlme)
pglsModel_ML <- gls(BodySize~elev, correlation=corBrownian(phy=pct), data=cd, method="ML")
pglsModel_ML <- gls(BodySize~elev, correlation=corBrownian(phy=pct), data=cd, method="ML")
BodySize <- cd$TOTL_mm.totallength.quant
elev <- cd$elevation_m.maxaltitude.quant
area <- cd$area
snout <- cd$SnoutVentLength.Mean
pglsModel_ML <- gls(BodySize~elev, correlation=corBrownian(phy=pct), data=cd, method="ML")
elev
BodySize
?gls
nrow(cd)
cd[1:401,]==NA
cd[1:401,]!=NA
cd[1:401,]!=NA
?is.na
is.na(cd[1:401,])
ncol(cd)
is.na(cd[,1:15])
na.omit(cd)
nrow(na.omit(cd))
head(na.omit(cd))
head(cd)
pglsModel_ML <- gls(BodySize~elev, correlation=corBrownian(phy=pct), data=cd, method="ML", na.action=na.omit)
pct
raw_data<-read.csv("~/Documents/Caudata_PhyloComp_Data.csv")
cd<-raw_data[,-1]
BodySize <- cd$TOTL_mm.totallength.quant
elev <- cd$elevation_m.maxaltitude.quant
area <- cd$area
snout <- cd$SnoutVentLength.Mean
# to facilitate model comparison in pgls force ML instead of REML
pglsModel_ML <- gls(BodySize~elev, correlation=corBrownian(phy=pct), data=cd, method="ML", na.action=na.omit)
BodySize
elev
length(BodySize)
length(elev)
pct
pglsModel_ML <- gls(BodySize~elev, correlation=corBrownian(phy=pct), data=cd, method="ML", na.action=na.omit)
BodySize
na.omit(cd)
nrow(na.omit(cd))
cd <- na.omit(cd)
pruning<-treedata(ct, cd)
pruning<-treedata(ct, cd)
head(cd)
cd
rownames(cd)
raw_data<-read.csv("~/Documents/Caudata_PhyloComp_Data.csv")
cd<-raw_data[,-1]
rownames(cd)<-raw_data[,1]
cd <- na.omit(cd)
pruning<-treedata(ct, cd)
pct<-pruning$phy
name.check(ct, cd)
raw_data<-read.csv("~/Documents/Caudata_PhyloComp_Data.csv")
cd<-raw_data[,-1]
rownames(cd)<-raw_data[,1]
cd <- na.omit(cd)
ct<-read.nexus("~/Documents/caud.ultra.nexus")
name.check(ct, cd)
pruning<-treedata(ct, cd)
pct<-pruning$phy
name.check(ct, cd)
pruning<-treedata(ct, cd)
pct<-pruning$phy
name.check(ct, cd)
name.check(pct, cd)
BodySize <- cd$TOTL_mm.totallength.quant
elev <- cd$elevation_m.maxaltitude.quant
area <- cd$area
snout <- cd$SnoutVentLength.Mean
pglsModel_ML <- gls(BodySize~elev, correlation=corBrownian(phy=pct), data=cd, method="ML")
summary(pglsModel_ML)
bodyVelev <- gls(BodySize~elev, correlation=corBrownian(phy=pct), data=cd, method="ML")
summary(pglsModel_ML)
snoutVelev<- gls(snout~elev, correlation=corBrownian(phy=pct), data=cd, method="ML")
summary(snoutVelev)
snout
BodySize
class(snout)
snout <- as.numeric(cd$SnoutVentLength.Mean)
snoutVelev<- gls(snout~elev, correlation=corBrownian(phy=pct), data=cd, method="ML")
summary(snoutVelev)
bodyVelev$AIC
summary(bodyVelev)
attributes(bodyVelev)
bodyVelev$logLik
AIC(bodyVelev$logLik)
bodyVelev$logLik
summary(bodyVelev)
bodyVelev$AIC
AIC(as.numeric(bodyVelev$logLik))
class(bodyVelev$logLik)
AIC(bodyVelev)
AIC(snoutVelev)
bodyVarea <- gls(BodySize~area, correlation=corBrownian(phy=pct), data=cd, method="ML")
summary(bodyVelev)
snoutVarea<- gls(snout~areaa, correlation=corBrownian(phy=pct), data=cd, method="ML")
snoutVarea<- gls(snout~area, correlation=corBrownian(phy=pct), data=cd, method="ML")
summary(snoutVelev)
bodyVarea <- gls(BodySize~area, correlation=corBrownian(phy=pct), data=cd, method="ML")
summary(bodyVelev)
summary(bodyVelev)
summary(snoutVelev)
summary(bodyVelev)
summary(bodyVelev)
summary(snoutVelev)
require(ggplot2)
summary(snoutVelev)
AIC(snoutVarea)
pairs(cd)
require(ape)
require(phytools)
require(geiger)
require(nlme)
require(ggplot2)
phylomorphospace(pct, c(BodySize, snout), label="off", node.size=c(0.5, 0.7))
body_pic <- pic(BodySize, pct)
snout_pic <- pic(snout, pct)
plot(body_pic ~ snout_pic)
picModel <- lm(body_pic ~ snout_pic + 0)
summary(picModel)
plot(picModel)
plot(pct)
?fitContinuous
bodyBM <- fitContinuous(pct, dat=BodySize, Model="BM")
BodySize
bodyBM <- fitContinuous(pct, dat=BodySize, Model="BM")
names(pct)
names(BodySize) <- rownames(pct)
rownames(pct)
names(BodySize) <- pct$tip.label
bodyBM <- fitContinuous(pct, dat=BodySize, Model="BM")
bodyBM <- fitContinuous(pct, dat=BodySize, model="BM")
bodyBM
BodySize
bodyBM
attributes(bodyBM)
AIC(bodyBM)
attributes
summary(bodyBM)
attrinutes(bodyBM)
attributes(bodyBM)
bodyBM
bodyOU <- fitContinuous(pct, dat=BodySize, model="OU")
bodyOU
bodyBM
names(snout) <- pct$tip.label
snoutBM <- fitContinuous(pct, dat=snout, model="BM")
snoutBM
snoutOU <- fitContinuous(pct, dat=snout, model="OU")
snoutOU
knitr::opts_chunk$set(echo = TRUE)
pbDat <- data.frame(t=0, N=0)
Ninit <- 1
lambda <- 0.1
N <- Ninit
t <- 0
pbDat <- data.frame(t=0, N=0)
pbDat
pbDat <- data.frame(t=0, N=0)
while (t < 5) {
dt <- rexp(1, rate=N*lambda) # N* lamnda so that the speciation rate is adjusted
t <- t + dt
N <- N + 1
pbDat <- rbind(pbDat, c(t,N))
}
pbDat
Ninit <- 1
lambda <- 0.1
N <- Ninit
t <- 0
pbDat <- data.frame(t=0, N=0)
while (t < 5) {
dt <- rexp(1, rate=N*lambda) # N* lamnda so that the speciation rate is adjusted
t <- t + dt
N <- N + 1
pbDat <- rbind(pbDat, c(t,N))
}
pbDat
N <- Ninit
t <- 0
pbDat <- data.frame(t=0, N=0)
while (t < 20) {
dt <- rexp(1, rate=N*lambda) # N* lamnda so that the speciation rate is adjusted
t <- t + dt
N <- N + 1
pbDat <- rbind(pbDat, c(t,N))
}
pbDat
N <- Ninit
t <- 0
pbDat <- data.frame(t=0, N=0)
while (t < 40) {
dt <- rexp(1, rate=N*lambda) # N* lamnda so that the speciation rate is adjusted
t <- t + dt
N <- N + 1
pbDat <- rbind(pbDat, c(t,N))
}
pbDat
plot(pbDat)
Ninit <- 100
mu <- 0.1
N <- Ninit
t <- 0
pbDat <- data.frame(t=0, N=N)
while (N > 0) {
dt <- rexp(1, rate=N*mu) # N* lamnda so that the speciation rate is adjusted
t <- t + dt
N <- N + 1
pbDat <- rbind(pbDat, c(t,N))
}
Ninit <- 100
mu <- 0.1
N <- Ninit
t <- 0
pbDat <- data.frame(t=0, N=N)
while (N > 0) {
dt <- rexp(1, rate=N*mu) # N* lamnda so that the speciation rate is adjusted
t <- t + dt
N <- N - 1
pbDat <- rbind(pbDat, c(t,N))
}
plot(pbDat)
dt <- rexp(1, rate=N*mu) # N* lamnda so that the speciation rate is adjusted
dt <- rexp(1, rate=N*mu) # N* lamnda so that the speciation rate is adjusted
Ninit <- 0
dt <- rexp(1, rate=N*lambda) # N* lamnda so that the speciation rate is adjusted
dt
Ninit <- 1
dt <- rexp(1, rate=N*lambda) # N* lamnda so that the speciation rate is adjusted
dt
dt <- rexp(1, rate=N*lambda) # N* lamnda so that the speciation rate is adjusted
lambda
N
Ninit <- 1
N <- Ninit
rate
dt <- rexp(1, rate=N*lambda) # N* lamnda so that the speciation rate is adjusted
dt
death <- rexp(1, rate=N*mu)
birth <- rexp(1, rate=N*lambda) # N* lamnda so that the speciation rate is adjusted
death
birth
Ninit <- 1
lambda = 0.2
mu <- 0.1
N <- Ninit
t <- 0
pbDat <- data.frame(t=0, N=N)
while (t < 40) {
death <- rexp(1, rate=N*mu)
birth <- rexp(1, rate=N*lambda) # N* lamnda so that the speciation rate is adjusted
if (birth > death) {
t <- t + birth
N <- N + 1
pbDat <- rbind(pbDat, c(t,N))
}
else{
t <- t +death
N <- N - 1
pbDat <- rbind(pbDat, c(t,N))
}
}
plot(pbDat)
N <- Ninit
t <- 0
pbDat <- data.frame(t=0, N=N)
while (t < 100) {
death <- rexp(1, rate=N*mu)
birth <- rexp(1, rate=N*lambda) # N* lamnda so that the speciation rate is adjusted
if (birth > death) {
t <- t + birth
N <- N + 1
pbDat <- rbind(pbDat, c(t,N))
}
else{
t <- t +death
N <- N - 1
pbDat <- rbind(pbDat, c(t,N))
}
}
death
death <- rexp(1, rate=N*mu)
N
Ninit <- 2
lambda = 0.2
mu <- 0.1
N <- Ninit
t <- 0
pbDat <- data.frame(t=0, N=N)
while (t < 100) {
death <- rexp(1, rate=N*mu)
birth <- rexp(1, rate=N*lambda) # N* lamnda so that the speciation rate is adjusted
if (birth > death) {
t <- t + birth
N <- N + 1
pbDat <- rbind(pbDat, c(t,N))
}
else{
t <- t +death
N <- N - 1
pbDat <- rbind(pbDat, c(t,N))
}
}
Ninit <- 2
lambda = 0.5
mu <- 0.1
N <- Ninit
t <- 0
pbDat <- data.frame(t=0, N=N)
while (t < 100) {
death <- rexp(1, rate=N*mu)
birth <- rexp(1, rate=N*lambda) # N* lamnda so that the speciation rate is adjusted
if (birth > death) {
t <- t + birth
N <- N + 1
pbDat <- rbind(pbDat, c(t,N))
}
else{
t <- t +death
N <- N - 1
pbDat <- rbind(pbDat, c(t,N))
}
}
birth
N
Ninit
N
death <- rexp(1, rate=N*mu)
N <- Ninit
death <- rexp(1, rate=N*mu)
birth <- rexp(1, rate=N*lambda) # N* lamnda so that the speciation rate is adjusted
Ninit <- 2
lambda = 0.5
mu <- 0.1
N <- Ninit
t <- 0
pbDat <- data.frame(t=0, N=N)
while (t < 100) {
death <- rexp(1, rate=N*mu)
birth <- rexp(1, rate=N*lambda) # N* lamnda so that the speciation rate is adjusted
if (birth < death) {
t <- t + birth
N <- N + 1
pbDat <- rbind(pbDat, c(t,N))
}
else{
t <- t +death
N <- N - 1
pbDat <- rbind(pbDat, c(t,N))
}
}
pbDat
require(TreeSim)
expectTaxa <- 2 * exp(0.5 * 5)
expectTaxa
simTree <- sim.bd.taxa.age(n=100, age=5, lambda=1, mu=0.5)
simTree <- sim.bd.taxa.age(numbsim=1, n=100, age=5, lambda=1, mu=0.5)
simTree
expectTaxa <- 2 * exp(0.5 * 5)
getwd()
setwd("/Users/Megan/Documents")
tree <- read.tree(file="etheostoma_percina_chrono.tre")
setwd("/Users/Megan/Documents")
setwd("/Users/Megan/Documents")
tree <- read.tree(file="etheostoma_percina_chrono.tre")
tree
require(ape)
knitr::opts_chunk$set(echo = TRUE)
install.packages("devtools")
devtools::install_github(ruffleymr/CAMI)
devtools::install_github("ruffleymr/CAMI"")
""
devtools::install_github("ruffleymr/CAMI")
integer(local)
is.integer(local)
is.integer(local)
local
local=0.5
is.integer(local)
if (is.integer(local)){
n <- local
}else{
n <- N * local
}
n
devtools
library(devtools)
devtools::use_vignette('introduction')
devtools::use_vignette('introduction')
getwd()
getwd()
getwd()
setwd("/Users/Megan/Documents/Github/CAMI/")
devtools::use_vignette('introduction')
devtools::use_vignette('CAMI')
devtools::use_vignette('CAMI_tutorial')
vingette('CAMI_tutorial', package="CAMI")
